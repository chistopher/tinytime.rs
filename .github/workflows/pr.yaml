name: pr

on: [pull_request]

jobs:
  test:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - run: echo "RUST_TOOLCHAIN=$(cat ./rust-toolchain)" >> $GITHUB_ENV
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          components: rustfmt, clippy
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: debug-build
      - name: Make test
        run: make test
  lint:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - run: |
          echo "RUST_TOOLCHAIN=$(cat ./rust-toolchain)" >> $GITHUB_ENV
          echo "RUST_TOOLCHAIN_NIGHTLY=$(cat ./rust-toolchain-nightly)" >> $GITHUB_ENV
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN_NIGHTLY }}
          components: rustfmt
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          components: rustfmt, clippy
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: debug-build-nightly
      - name: Make lint
        run: make lint
  semver:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    steps:
      - uses: actions/checkout@v4
      - name: Calculate next version
        id: calc_version
        uses: rymndhng/release-on-push-action@master
        with:
          bump_version_scheme: patch
          tag_prefix: ""
          dry_run: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Print version
        run: | 
          echo "${{steps.calc_version.outputs.version}} ${{github.event.pull_request.labels}}"
          echo "${{toJson(github.event.pull_request.labels.*.name)}}"
      - name: Set version
        if: ${{ steps.calc_version.outputs.version }} != ""
        run: |
          sed -i "s/^version = \".*\"$/version = \"${{ steps.calc_version.outputs.version }}\"/" Cargo.toml
      - name: Commit new version to main but don't push
        if: ${{ steps.calc_version.outputs.version }} != ""
        run: |
          git config --global user.email "rust-maintainers@moiaorg.onmicrosoft.com"
          git config --global user.name "MOIA Rust Maintainers"
          git commit -am "Phantom release ${{ steps.calc_version.outputs.version }} [skip ci]"
      - name: Check semver
        uses: obi1kenobi/cargo-semver-checks-action@v2
        with:
          version-tag-prefix: ''
